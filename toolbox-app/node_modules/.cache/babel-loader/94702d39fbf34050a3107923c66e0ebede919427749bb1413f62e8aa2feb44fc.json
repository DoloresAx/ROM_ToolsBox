{"ast":null,"code":"var _jsxFileName = \"/home/dolores/Desktop/ROM_ToolsBox/toolbox-app/src/App.js\",\n  _s = $RefreshSig$();\n// Import main React library and hooks\nimport React, { useState } from 'react';\n\n// Import custom components\nimport FloatingButtons from './components/FloatingButtons';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport ChatGrid from './components/ChatGrid';\n\n// Import global styles\nimport './App.css';\n\n/**\n * Main App component.\n * Handles theme switching, search state, and renders the main layout.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for theme: 'light' or 'dark'\n  const [theme, setTheme] = useState('light');\n\n  // State for search input value\n  const [search, setSearch] = useState('');\n\n  // Function to toggle between light and dark themes\n  const toggleTheme = () => setTheme(theme === 'light' ? 'dark' : 'light');\n  return (\n    /*#__PURE__*/\n    // Set class based on current theme for background and text color\n    _jsxDEV(\"div\", {\n      className: theme === 'dark' ? 'bg-dark text-light min-vh-100' : 'bg-light text-dark min-vh-100',\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        theme: theme,\n        toggleTheme: toggleTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ChatGrid, {\n          theme: theme,\n          filter: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FloatingButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"qyfEupz3anwrkv+y1guUMxltE4c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FloatingButtons","Header","SearchBar","ChatGrid","jsxDEV","_jsxDEV","App","_s","theme","setTheme","search","setSearch","toggleTheme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","filter","_c","$RefreshReg$"],"sources":["/home/dolores/Desktop/ROM_ToolsBox/toolbox-app/src/App.js"],"sourcesContent":["// Import main React library and hooks\nimport React, { useState } from 'react';\n\n// Import custom components\nimport FloatingButtons from './components/FloatingButtons';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport ChatGrid from './components/ChatGrid';\n\n// Import global styles\nimport './App.css';\n\n/**\n * Main App component.\n * Handles theme switching, search state, and renders the main layout.\n */\nfunction App() {\n  // State for theme: 'light' or 'dark'\n  const [theme, setTheme] = useState('light');\n\n  // State for search input value\n  const [search, setSearch] = useState('');\n\n  // Function to toggle between light and dark themes\n  const toggleTheme = () => setTheme(theme === 'light' ? 'dark' : 'light');\n\n  return (\n    // Set class based on current theme for background and text color\n    <div className={theme === 'dark' ? 'bg-dark text-light min-vh-100' : 'bg-light text-dark min-vh-100'}>\n      {/* Header with theme toggle button */}\n      <Header theme={theme} toggleTheme={toggleTheme} />\n\n      <div className=\"container mt-4\">\n        {/* Search bar for filtering chat grid */}\n        <SearchBar value={search} onChange={e => setSearch(e.target.value)} />\n\n        {/* Grid displaying chat items, filtered by search and styled by theme */}\n        <ChatGrid theme={theme} filter={search} />\n      </div>\n\n      {/* Floating action buttons (e.g., for quick actions) */}\n      <FloatingButtons />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;;AAE5C;AACA,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;;EAE3C;EACA,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMa,WAAW,GAAGA,CAAA,KAAMH,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAExE;IAAA;IACE;IACAH,OAAA;MAAKQ,SAAS,EAAEL,KAAK,KAAK,MAAM,GAAG,+BAA+B,GAAG,+BAAgC;MAAAM,QAAA,gBAEnGT,OAAA,CAACJ,MAAM;QAACO,KAAK,EAAEA,KAAM;QAACI,WAAW,EAAEA;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAElDb,OAAA;QAAKQ,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAE7BT,OAAA,CAACH,SAAS;UAACiB,KAAK,EAAET,MAAO;UAACU,QAAQ,EAAEC,CAAC,IAAIV,SAAS,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGtEb,OAAA,CAACF,QAAQ;UAACK,KAAK,EAAEA,KAAM;UAACe,MAAM,EAAEb;QAAO;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eAGNb,OAAA,CAACL,eAAe;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB;EAAC;AAEV;AAACX,EAAA,CA5BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}